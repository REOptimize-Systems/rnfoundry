% example_double_pendulum.m
%
% this is intended to replicate the MBDyn double 
% pendulum example which can be found at:
%
% http://www.sky-engin.jp/en/MBDynTutorial/chap15/chap15.html
%

% global orientation/location reference
gref = mbdyn.pre.globalref;

theta1 = -pi/5;
theta2 = pi/5;
L = 1;
M = 1;
inertiamat = diag ([0., M*L^2./12., M*L^2./12.]);

Ref_Link1 = mbdyn.pre.reference ( [], ...
                                  mbdyn.pre.orientmat ('euler', [0, theta1, 0]), ...
                                  [], ...
                                  [], ...
                                  'Parent', gref, ...
                                  'Name', 'Ref_Link1');


Ref_Node_Link1 = mbdyn.pre.reference ( [0.5*L; 0; 0], ...
                                       [], ...
                                       [], ...
                                       [], ...
                                       'Parent', Ref_Link1, ...
                                       'Name', 'Ref_Node_Link1' );

link1node = mbdyn.pre.structuralNode6dof ('dynamic', ...
                                          'AbsolutePosition', Ref_Node_Link1.pos, ...
                                          'AbsoluteOrientation', Ref_Node_Link1.orientm );

Ref_Link2 = mbdyn.pre.reference ( [L; 0; 0], ...
                                   mbdyn.pre.orientmat ('euler', [0, theta2, 0]), [], ...
                                   [], ...
                                   'Parent', Ref_Link1, ...
                                   'Name', 'Ref_Link2');

Ref_Node_Link2 = mbdyn.pre.reference ( [0.5*L; 0; 0], ...
                                       mbdyn.pre.orientmat ('orientation', eye(3)), ...
                                       [], ...
                                       [], ...
                                       'Parent', Ref_Link2, ...
                                       'Name', 'Ref_Node_Link2');

link2node = mbdyn.pre.structuralNode6dof ('dynamic', ...
                                          'AbsolutePosition', Ref_Node_Link2.pos, ...
                                          'AbsoluteOrientation', Ref_Node_Link2.orientm );

link1 = mbdyn.pre.body (M, [], inertiamat, link1node);
link2 = mbdyn.pre.body (M, [], inertiamat, link2node);

link1.setSize (L, L/10, L/10);
link2.setSize (L, L/10, L/10);
link1.setColour ('r');
link1.setColour ('b');

hinges_orientation = mbdyn.pre.orientmat ( ...
    '2vectors', struct ('ia', 1, 'vecA', [1;0;0], 'ib', 3, 'vecB', [0;1;0]) );

Ref_pin = mbdyn.pre.reference ( [], hinges_orientation, [], [], ...
                                'Parent', Ref_Link1, ...
                                'Name', 'Ref_pin' );
                            
Ref_hinge = mbdyn.pre.reference ( [], hinges_orientation, [], [], ...
                                  'Parent', Ref_Link2, ...
                                  'Name', 'Ref_hinge' );

pinjoint = mbdyn.pre.revolutePin (link1node, Ref_Link1.pos, Ref_Link1.pos, ...
                    'NodeRelativeOrientation', Ref_pin.orientm, ...
                    'PinOrientation', Ref_pin.orientm);

linkjoint = mbdyn.pre.revoluteHinge ( link1node, link2node, ...
                                      ...Ref_Link2.pos, Ref_Link2.pos, ...
                                     [L/2;0;0], [L/2;0;0], ...
                                     'Offset1Reference', 'node', ...
                                     'Offset2Reference', 'other node', ...
                                     ...'Offset1Reference', 'global', ...
                                     ...'Offset2Reference', 'global', ...
                                     'RelativeOrientation1', Ref_hinge.orientm, ...
                                     'Orientation1Reference', 'global', ...
                                     'RelativeOrientation2', Ref_hinge.orientm, ...
                                     'Orientation2Reference', 'global' ...
                                     );

pinjoint.setSize (L/10, L/10, L/10);
pinjoint.setColour ('k');
linkjoint.setSize (L/10, L/10, L/10);
linkjoint.setColour ('g');

prb = mbdyn.pre.initialValueProblem (0, 10, 1e-3, ...
                                     'ResidualTolerance', 1e-9);

mbsys = mbdyn.pre.system ( {prb}, ...
                           'Nodes', {link1node, link2node}, ...
                           'Elements', { link1, link2, pinjoint, ...
                                         linkjoint, mbdyn.pre.gravity() }, ...
                           'References', { Ref_Link1, ...
                                           Ref_Node_Link1,  ...
                                           Ref_Link2,  ...
                                           Ref_Node_Link2,  ...
                                           Ref_pin,  ...
                                           Ref_hinge }, ...
                           'DefaultOrientation', 'orientation matrix');

str = mbsys.generateMBDynInputStr ()

mbsys.setStructuralNodeSize (L/10, L/10, L/10);

mbsys.draw ('Mode','wireghost', 'References', true, 'ReferenceScale', 0.5)

mbsys.draw ('Mode','wireghost', 'AxLims', [-2, 2; -2, 2; -2, 2;])

%%
inputfile = mbsys.generateMBDynInputFile ('Test_mbdyn_pre.mbd');

% create the mbdyn input file
mbsys.generateMBDynInputFile (inputfile);

% start mbdyn 
mbdyn.mint.start_mbdyn (inputfile);

%% Post-processing

% load data into post-processing object
mbdynpost = mbdyn.postproc (inputfile(1:end-4), mbsys);

%% Plot Trajectories

mbdynpost.plotNodeTrajectories ();

%% Plot a particular time step of interest

mbdynpost.drawStep (500, ...
    'AxLims', [-1.1, 1.1; -0.5, 0.5;  -2, 1]);

%% Animate

mbdynpost.animate ( 'PlotTrajectories', true, ...
                    'DrawLabels', true, ...
                    'Skip', 20, ...
                    'DrawMode', 'solid', ...
                    'Light', true, ...
                    'AxLims', [-3.1, 3.1; -1.5, 1.5;  -3, 3], ...
                    'VideoFile', 'double_pendulum.avi');