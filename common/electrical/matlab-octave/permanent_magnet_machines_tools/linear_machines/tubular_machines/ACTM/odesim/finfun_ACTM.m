function [design, simoptions] = finfun_ACTM(design, simoptions)
    
    design = ratios2dimensions_ACTM(design);
    
    design = makelossfcns_ACTM(design);
    
    [design, simoptions] = finfun_TM(design, simoptions);
    
end

function design = makelossfcns_ACTM(design)

    % make constant core loss slms which evaluate to zero at all positions
    % this for compatibility with lossforces_AM.m
    design.CoreLossSLMs.hxslm = slmengine([0,2], [0, 0], ...
                                'knots', 2, 'Degree', 0, 'EndCon', 'Periodic');
                            
    design.CoreLossSLMs.cxslm = slmengine([0,2], [0, 0], ...
                                'knots', 2, 'Degree', 0, 'EndCon', 'Periodic');
                            
    design.CoreLossSLMs.exslm = slmengine([0,2], [0, 0], ...
                                'knots', 2, 'Degree', 0, 'EndCon', 'Periodic');
                            
    % generate positions for the flux density integral data
    design.intBdata.pos = linspace(0, 2, 20);

    % now extract the information necessary to create the squared
    % derivative data for the coil eddy current calculation
    design.intBdata.intB1 = intBfrm2dBgrid(design.Ri, ...
                                          -design.Wc/(2*design.Wp), ...
                                          design.Hc, ...
                                          design.Wc/design.Wp, ...
                                          [zeros(numel(design.intBdata.pos), 1), (design.intBdata.pos)'], ...
                                          design.X, design.Y, cat(3, design.Bx, design.By), ...
                                          false, ...
                                          design.Wp);

    % generate the slm containing the part calculated SVD for eddy current
    % calculation in lossforces_AM.m
    design.slm_eddysfdpart = makesfdeddyslm(design.WireResistivityBase, ...
                                        design.MTL, ...
                                        design.Dc, ...
                                        design.CoilTurns, ...
                                        design.intBdata.pos .* design.Wp, ...
                                        design.intBdata.intB1 ./ design.CoilArea, ...
                                        [], ...
                                        design.NStrands);   
    
end